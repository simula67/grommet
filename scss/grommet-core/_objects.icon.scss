// (C) Copyright 2014-2016 Hewlett Packard Enterprise Development LP

.control-icon {
  display: inline-block;
  width: $inuit-base-spacing-unit;
  height: $inuit-base-spacing-unit;
  // vertical-align: middle;
  cursor: pointer;
  fill: $icon-color;
  stroke: $icon-color;
  flex: 0 0 auto;

  *:not([stroke]) {
    &[fill="none"] {
      stroke-width: 0;
    }
  }

  *[stroke] {
    stroke: inherit;
  }

  *[fill*="#"] {
    fill: inherit;
  }

  @include graph-stroke-color();
  @include graph-fill-color();

  @include media-query(lap-and-up) {
    transition: all $base-animation-duration ease-in-out;
  }

  a:hover &,
  .anchor:hover &,
  .button:hover &,
  .menu__control:hover & {
    fill: $active-icon-color;
    stroke: $active-icon-color;
  }

  .anchor.anchor--disabled:hover & {
    fill: $icon-color;
    stroke: $icon-color;
  }

  .button.button--disabled:hover & {
    fill: $icon-color;
    stroke: $icon-color;
  }

  &__badge {
    circle {
      fill: $icon-badge-background-color;
    }

    text {
      stroke: $icon-badge-text-color;
      fill: $icon-badge-text-color;
    }
  }

  #{$dark-background-context} &:not([class*="color-index"]),
  .button--primary & {
    fill: $colored-icon-color;
    stroke: $colored-icon-color;
  }

  #{$dark-background-context} a:hover > &,
  #{$dark-background-context} .anchor:hover > &,
  #{$dark-background-context} .button:hover > &,
  #{$dark-background-context} .menu__control:hover > &,
  .button--primary:hover & {
    fill: $active-colored-icon-color;
    stroke: $active-colored-icon-color;
  }

  &--active {
    fill: $active-icon-color;
    stroke: $active-icon-color;
  }

  &--large {
    width: round($inuit-base-spacing-unit * 2);
    height: round($inuit-base-spacing-unit * 2);
  }

  @include media-query(palm) {
    &--xlarge,
    &--huge {
      width: round($inuit-base-spacing-unit * 2);
      height: round($inuit-base-spacing-unit * 2);
    }
  }

  @include media-query(lap-and-up) {
    &--xlarge {
      width: round($inuit-base-spacing-unit * 6);
      height: round($inuit-base-spacing-unit * 6);
    }

    &--huge {
      width: round($inuit-base-spacing-unit * 12);
      height: round($inuit-base-spacing-unit * 12);
    }
  }
}

.status-icon {
  width: $inuit-base-spacing-unit;
  height: $inuit-base-spacing-unit;
  vertical-align: middle;
  flex: 0 0 auto;

  .status-icon__base {
    fill: map-get($brand-status-colors, unknown);
  }

  @each $status, $color in $brand-status-colors {
    &-#{$status} {
      .status-icon__base {
        fill: $color;
      }
    }
  }

  &-label {
    .status-icon__base {
      fill: map-get($brand-status-colors, unknown);
    }
  }

  &__detail {
    fill: $background-color;
    stroke: $background-color;
  }

  &-unknown {
    .status-icon__detail {
      fill: map-get($brand-status-colors, unknown);
      stroke: map-get($brand-status-colors, unknown);
    }
  }

  &--large {
    width: double($inuit-base-spacing-unit);
    height: double($inuit-base-spacing-unit);
  }

  &--xlarge {
    width: round($inuit-base-spacing-unit * 6);
    height: round($inuit-base-spacing-unit * 6);
  }

  &--huge {
    width: round($inuit-base-spacing-unit * 12);
    height: round($inuit-base-spacing-unit * 12);
  }

  &--small {
    width: halve($inuit-base-spacing-unit);
    height: halve($inuit-base-spacing-unit);
    // adjust margin so it aligns with text better
    margin-top: quarter($inuit-base-spacing-unit);
    margin-bottom: quarter($inuit-base-spacing-unit);

    .status-icon__detail {
      display: none;
    }
  }
}

@include keyframes(rotate) {
  100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }
}

.icon-changing {
  width: $inuit-base-spacing-unit;
  height: $inuit-base-spacing-unit;
  @include animation('rotate 1.5s linear infinite');

  &--small {
    width: halve($inuit-base-spacing-unit);
    height: halve($inuit-base-spacing-unit);
  }
}

.icon-spinning {
  width: $inuit-base-spacing-unit;
  height: $inuit-base-spacing-unit;
  @include animation('rotate 4s steps(4, end) infinite');

  &--small {
    width: halve($inuit-base-spacing-unit);
    height: halve($inuit-base-spacing-unit);
  }
}

.logo-icon {
  width: double($inuit-base-spacing-unit);
  height: double($inuit-base-spacing-unit);

  @include graph-stroke-color();

  &--small {
    width: $inuit-base-spacing-unit;
    height: $inuit-base-spacing-unit;
  }

  &--large {
    width: quadruple($inuit-base-spacing-unit);
    height: quadruple($inuit-base-spacing-unit);
  }

  &--xlarge {
    width: round($inuit-base-spacing-unit * 6);
    height: round($inuit-base-spacing-unit * 6);
  }

  &--huge {
    width: round($inuit-base-spacing-unit * 12);
    height: round($inuit-base-spacing-unit * 12);
  }
}

.right-left-icon {
  &--left {
    display: none;
  }

  html.rtl & {
    &--left {
      display: inline;
    }

    &--right {
      display: none;
    }
  }
}
